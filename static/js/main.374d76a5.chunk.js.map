{"version":3,"sources":["../../src/index.tsx","CodeIcon.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["calculatePosition","refContainer","refDropdown","positioning","dropdownPosition","current","getBoundingClientRect","left","top","width","height","Error","clamped","leftCopy","document","documentElement","clientWidth","clamp","children","className","dropdown","dropdownWrapperId","hasClickOutsideListener","isOpen","undefined","mode","wrapperId","zIndex","props","React.useState","position","setPosition","shouldRenderContent","setShouldRenderContent","isDropdownShown","setIsDropdownShown","React.useRef","IS_CONTROLLED","modeCopy","console","error","calculatePositionAndSetState","React.useCallback","React.useEffect","window","addEventListener","removeEventListener","outsideClickListener","event","contains","target","React.createElement","tabIndex","role","onKeyDown","includes","key","curr","id","ref","onMouseEnter","onMouseLeave","onClick","style","visibility","SvgComponent","viewBox","fill","d","Card","code","useState","isCodeShown","setIsCodeShown","CodeIcon","map","line","DropdownContent","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.374d76a5.chunk.js","sourcesContent":["import * as React from \"react\";\nimport \"./dropdown.scss\";\n\nexport type Positioning = \"center\" | \"left\" | \"right\";\n\nexport type Mode = \"hover\" | \"click\";\n\nexport type Props = {\n  children: React.ReactNode;\n  className?: string;\n  dropdown: React.ReactNode;\n  dropdownWrapperId: string;\n  hasClickOutsideListener?: boolean;\n  isOpen?: boolean;\n  mode: Mode;\n  positioning: Positioning;\n  wrapperId?: string;\n  zIndex: \"auto\" | number;\n};\n\nconst clamp = ({ left = 0, top = 0, width = 0 }: Partial<DOMRect>) => {\n  let leftCopy = left;\n\n  if (leftCopy < 0) {\n    leftCopy = 0;\n  } else if (left + width > document.documentElement.clientWidth) {\n    leftCopy = document.documentElement.clientWidth - width;\n  }\n\n  return { left: leftCopy, top };\n};\n\nfunction calculatePosition(\n  refContainer: React.RefObject<HTMLDivElement>,\n  refDropdown: React.RefObject<HTMLDivElement>,\n  positioning: Positioning,\n) {\n  const dropdownPosition = refContainer?.current?.getBoundingClientRect() || {\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n  };\n  let { left } = dropdownPosition;\n  const { top, width, height } = dropdownPosition;\n\n  switch (positioning) {\n    case \"center\":\n      left += width / 2;\n      left -= (refDropdown?.current?.getBoundingClientRect()?.width || 0) / 2;\n      break;\n    case \"left\":\n      break;\n    case \"right\":\n      left += width;\n      left -= refDropdown?.current?.getBoundingClientRect()?.width || 0;\n      break;\n    default:\n      throw new Error(`Unknown positioning ${positioning}`);\n  }\n\n  const clamped = clamp({\n    left,\n    top,\n    width: refDropdown?.current?.getBoundingClientRect().width || 0,\n  });\n\n  return { left: clamped.left, top: clamped.top + height };\n}\n\nfunction Dropdown({\n  children,\n  className = \"dropdown\",\n  dropdown,\n  dropdownWrapperId,\n  hasClickOutsideListener = true,\n  isOpen = undefined,\n  mode = \"hover\",\n  positioning = \"center\",\n  wrapperId,\n  zIndex = \"auto\",\n  ...props\n}: Props) {\n  const [position, setPosition] = React.useState({ left: 0, top: 0 });\n  const [shouldRenderContent, setShouldRenderContent] = React.useState(false);\n  const [isDropdownShown, setIsDropdownShown] = React.useState(false);\n  const refContainer = React.useRef<HTMLDivElement>(null);\n  const refDropdown = React.useRef<HTMLDivElement>(null);\n\n  const IS_CONTROLLED = !(typeof isOpen === \"undefined\" || isOpen === null);\n  let modeCopy = mode;\n\n  if (mode !== \"hover\" && mode !== \"click\") {\n    console.error(\n      \"Use one of ['hover', 'click'] for mode prop. Defaulting to hover.\",\n    );\n    modeCopy = \"hover\";\n  }\n\n  const calculatePositionAndSetState = React.useCallback(() => {\n    if (isDropdownShown) {\n      const position = calculatePosition(\n        refContainer,\n        refDropdown,\n        positioning,\n      );\n      setPosition(position);\n    }\n  }, [isDropdownShown, positioning]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", calculatePositionAndSetState);\n    window.addEventListener(\"resize\", calculatePositionAndSetState);\n\n    return () => {\n      window.removeEventListener(\"scroll\", calculatePositionAndSetState);\n      window.removeEventListener(\"resize\", calculatePositionAndSetState);\n    };\n  }, [calculatePositionAndSetState]);\n\n  React.useEffect(() => {\n    if (IS_CONTROLLED) {\n      if (isOpen) {\n        setShouldRenderContent(true);\n      } else {\n        setShouldRenderContent(false);\n      }\n    }\n  }, [IS_CONTROLLED, isOpen]);\n\n  React.useEffect(() => {\n    if (shouldRenderContent) {\n      const position = calculatePosition(\n        refContainer,\n        refDropdown,\n        positioning,\n      );\n      setPosition(position);\n      setIsDropdownShown(true);\n    }\n  }, [positioning, shouldRenderContent]);\n\n  React.useEffect(() => {\n    function outsideClickListener(event: MouseEvent) {\n      if (!refContainer?.current?.contains(event.target as Node)) {\n        setShouldRenderContent(false);\n      }\n    }\n\n    if (hasClickOutsideListener && !IS_CONTROLLED) {\n      window.addEventListener(\"click\", outsideClickListener);\n    }\n    return () => window.removeEventListener(\"click\", outsideClickListener);\n  }, [IS_CONTROLLED, hasClickOutsideListener, positioning]);\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (mode === \"hover\") {\n      if ([\" \", \"Enter\"].includes(event.key)) {\n        setShouldRenderContent((curr) => !curr);\n      }\n    }\n    if (IS_CONTROLLED) {\n      return;\n    }\n  }\n\n  function onMouseEnter() {\n    if (IS_CONTROLLED) {\n      return;\n    }\n    if (modeCopy === \"hover\") {\n      setShouldRenderContent(true);\n    }\n  }\n\n  function onMouseLeave() {\n    if (IS_CONTROLLED) {\n      return;\n    }\n    if (modeCopy === \"hover\") {\n      setShouldRenderContent(false);\n    }\n    return;\n  }\n\n  function onClick(event: React.MouseEvent) {\n    if (IS_CONTROLLED) {\n      return;\n    }\n    if (modeCopy === \"click\") {\n      if (!refDropdown?.current?.contains(event.target as Node)) {\n        setShouldRenderContent((curr) => !curr);\n      }\n    }\n    return;\n  }\n\n  return (\n    <div\n      className={className}\n      tabIndex={IS_CONTROLLED ? undefined : 0}\n      role={IS_CONTROLLED ? undefined : \"button\"}\n      onKeyDown={onKeyDown}\n      id={wrapperId}\n      ref={refContainer}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n      <div\n        className={\"dropdown-wrapper\"}\n        id={dropdownWrapperId}\n        ref={refDropdown}\n        style={{\n          visibility: isDropdownShown ? \"visible\" : \"hidden\",\n          top: position.top,\n          left: position.left,\n          zIndex,\n        }}\n      >\n        {shouldRenderContent ? dropdown : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React from \"react\";\n\nconst SvgComponent = props => (\n  <svg viewBox=\"0 0 1000 1000\" {...props}>\n    <path\n      fill=\"#11253e\"\n      d=\"M980.8 521.1L783.2 718.5c-12.2 12.2-32 12.2-44.2 0-12.2-12.2-12.2-31.9 0-44.1L914.6 499 739 323.7c-12.2-12.2-12.2-31.9 0-44.1 12.2-12.2 32-12.2 44.2 0L980.8 477c12.3 12.2 12.3 31.9 0 44.1zM332.9 906.5c-9 15.7-28.9 21.1-44.5 12-15.6-9-20.9-29.1-11.9-44.8L667.1 93.5c9-15.7 28.9-21.1 44.5-12 15.6 9.1 20.9 29.1 11.9 44.8L332.9 906.5zm-71.9-188c-12.2 12.2-32 12.2-44.2 0L19.1 521.1C7 508.9 7 489.2 19.1 477l197.7-197.4c12.2-12.2 32-12.2 44.2 0 12.2 12.2 12.2 31.9 0 44.1L85.4 499 261 674.4c12.2 12.2 12.2 31.9 0 44.1z\"\n    />\n  </svg>\n);\n\nexport default SvgComponent;\n","import React, { useState } from \"react\";\nimport \"./Card.css\";\nimport CodeIcon from \"./CodeIcon\";\n\nfunction Card({ children, code }) {\n  const [isCodeShown, setIsCodeShown] = useState(false);\n\n  return (\n    <div className=\"card\">\n      {children}\n      {code && (\n        <div className=\"code-button-wrapper\">\n          <button\n            className=\"code-toggle-button\"\n            onClick={() => setIsCodeShown(curr => !curr)}\n          >\n            <CodeIcon width=\"20px\" height=\"20px\" />\n          </button>\n        </div>\n      )}\n      {isCodeShown && (\n        <div className=\"code-big-wrapper\">\n          <div className=\"code\">\n            {code.map(line => (\n              <p className=\"code-line\">{line}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./App.css\";\nimport Dropdown from \"react-dropdown-overflow\";\nimport Card from \"./Card\";\n\nfunction DropdownContent() {\n  return (\n    <div className=\"dropdown-content\">\n      <div>item 1</div>\n      <div>item 2</div>\n      <div>item 3</div>\n      <div>item 4</div>\n      <div>item 5</div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>react-dropdown-overflow</h1>\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Hover</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">mode='hover'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"click\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Click</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">mode='click'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown mode=\"click\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" positioning=\"left\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Positioning (left)</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">positioning='left'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown positioning=\"left\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" positioning=\"center\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Positioning (center)</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">positioning='center'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown positioning=\"center\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" positioning=\"right\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Positioning (right)</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">positioning='right'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown positioning=\"right\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"click\" hasClickOutsideListener dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Outside click listener</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">hasClickOutsideListener</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown\n            mode=\"click\"\n            hasClickOutsideListener\n            dropdown={<DropdownContent />}\n          >\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card>\n        <h2>Overflow example</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">{`mode='hover'`}</div>\n        </div>\n        <div className=\"overflow-wrapper\">\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"click\" isOpen dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Controlled component</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">{`isOpen={true}`}</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown isOpen dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}