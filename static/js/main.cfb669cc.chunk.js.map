{"version":3,"sources":["CodeIcon.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["SvgComponent","props","react_default","a","createElement","Object","assign","viewBox","fill","d","Card","_ref","children","code","_useState","useState","_useState2","slicedToArray","isCodeShown","setIsCodeShown","className","onClick","curr","CodeIcon","width","height","map","line","DropdownContent","App","src_Card","dist_default","dropdown","mode","positioning","hasClickOutsideListener","isOpen","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfb669cc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SvgComponent = props => (\n  <svg viewBox=\"0 0 1000 1000\" {...props}>\n    <path\n      fill=\"#11253e\"\n      d=\"M980.8 521.1L783.2 718.5c-12.2 12.2-32 12.2-44.2 0-12.2-12.2-12.2-31.9 0-44.1L914.6 499 739 323.7c-12.2-12.2-12.2-31.9 0-44.1 12.2-12.2 32-12.2 44.2 0L980.8 477c12.3 12.2 12.3 31.9 0 44.1zM332.9 906.5c-9 15.7-28.9 21.1-44.5 12-15.6-9-20.9-29.1-11.9-44.8L667.1 93.5c9-15.7 28.9-21.1 44.5-12 15.6 9.1 20.9 29.1 11.9 44.8L332.9 906.5zm-71.9-188c-12.2 12.2-32 12.2-44.2 0L19.1 521.1C7 508.9 7 489.2 19.1 477l197.7-197.4c12.2-12.2 32-12.2 44.2 0 12.2 12.2 12.2 31.9 0 44.1L85.4 499 261 674.4c12.2 12.2 12.2 31.9 0 44.1z\"\n    />\n  </svg>\n);\n\nexport default SvgComponent;\n","import React, { useState } from \"react\";\nimport \"./Card.css\";\nimport CodeIcon from \"./CodeIcon\";\n\nfunction Card({ children, code }) {\n  const [isCodeShown, setIsCodeShown] = useState(false);\n\n  return (\n    <div className=\"card\">\n      {children}\n      {code && (\n        <div className=\"code-button-wrapper\">\n          <button\n            className=\"code-toggle-button\"\n            onClick={() => setIsCodeShown(curr => !curr)}\n          >\n            <CodeIcon width=\"20px\" height=\"20px\" />\n          </button>\n        </div>\n      )}\n      {isCodeShown && (\n        <div className=\"code-big-wrapper\">\n          <div className=\"code\">\n            {code.map(line => (\n              <p className=\"code-line\">{line}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./App.css\";\nimport Dropdown from \"react-dropdown-overflow\";\nimport Card from \"./Card\";\n\nfunction DropdownContent() {\n  return (\n    <div className=\"dropdown-content\">\n      <div>item 1</div>\n      <div>item 2</div>\n      <div>item 3</div>\n      <div>item 4</div>\n      <div>item 5</div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>react-dropdown-overflow</h1>\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Hover</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">mode='hover'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"click\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Click</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">mode='click'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown mode=\"click\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" positioning=\"left\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Positioning (left)</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">positioning='left'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown positioning=\"left\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" positioning=\"center\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Positioning (center)</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">positioning='center'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown positioning=\"center\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"hover\" positioning=\"right\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Positioning (right)</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">positioning='right'</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown positioning=\"right\" dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"click\" positioning=\"right\" dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Outside click listener</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">hasClickOutsideListener</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown\n            mode=\"click\"\n            hasClickOutsideListener\n            dropdown={<DropdownContent />}\n          >\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n\n      <Card>\n        <h2>Overflow example</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">{`mode='hover'`}</div>\n        </div>\n        <div className=\"overflow-wrapper\">\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n          <div className=\"dropdown-container\">\n            <Dropdown dropdown={<DropdownContent />}>\n              <button className=\"button-toggle\">Toggle</button>\n            </Dropdown>\n          </div>\n        </div>\n      </Card>\n\n      <Card\n        code={[\n          `<Dropdown mode=\"click\" isOpen dropdown={<DropdownContent />}>`,\n          `  <button className=\"button-toggle\">Toggle</button>`,\n          `</Dropdown>`\n        ]}\n      >\n        <h2>Controlled component</h2>\n        <div className=\"code-wrapper\">\n          <div className=\"code\">{`isOpen={true}`}</div>\n        </div>\n        <div className=\"dropdown-container\">\n          <Dropdown isOpen dropdown={<DropdownContent />}>\n            <button className=\"button-toggle\">Toggle</button>\n          </Dropdown>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}